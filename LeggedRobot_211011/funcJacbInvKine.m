function dAng = funcJacbInvKine(in1,in2,in3)
%FUNCJACBINVKINE
%    DANG = FUNCJACBINVKINE(IN1,IN2,IN3)

%    This function was generated by the Symbolic Math Toolbox version 8.1.
%    21-Oct-2020 10:24:43

Ang1 = in1(1,:);
Ang2 = in1(2,:);
Ang3 = in1(3,:);
Len1 = in3(1,:);
Len2 = in3(2,:);
dPos1 = in2(1,:);
dPos2 = in2(2,:);
dPos3 = in2(3,:);
t2 = cos(Ang1);
t3 = sin(Ang1);
t4 = t2.^2;
t5 = t3.^2;
t6 = t4+t5;
t7 = 1.0./t6;
t8 = Ang2+Ang3;
t9 = cos(t8);
t10 = cos(Ang2);
t11 = sin(t8);
t12 = sin(Ang2);
t13 = Len1.*t9.*t12;
t14 = t13-Len1.*t10.*t11;
t15 = 1.0./t14;
dAng = [-(t7.*(dPos1.*t3-dPos2.*t2))./(Len1.*t10+Len2.*t9);-t7.*t15.*(dPos1.*t2.*t9+dPos2.*t3.*t9+dPos3.*t4.*t11+dPos3.*t5.*t11);(t7.*t15.*(Len1.*dPos1.*t2.*t10+Len2.*dPos1.*t2.*t9+Len1.*dPos2.*t3.*t10+Len2.*dPos2.*t3.*t9+Len1.*dPos3.*t4.*t12+Len2.*dPos3.*t4.*t11+Len1.*dPos3.*t5.*t12+Len2.*dPos3.*t5.*t11))./Len2];
